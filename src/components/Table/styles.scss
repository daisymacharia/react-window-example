// import makeStyles from "@material-ui/styles/makeStyles";

// // some `const`s to quickly move the grid around
// const cellHeight = 30;
// const cellWidth = 150;
// const height = 400;
// const width = 600

// const useStyles = makeStyles({
//     multigrid: {
//         marginTop: 8,
//         width: "100%",
//         height: "100%",
//         position: "relative",
//     },
//     rowLabels: {
//         // absolutely position the label and move it down `cellHeight`
//         position: "absolute !important",
//         top: cellHeight,
//         borderTop: "1px solid black"
//     },
//     columnLabels: {
//         // absolutely position the label and move it down `cellWidth`
//         position: "absolute !important",
//         left: cellWidth,
//         borderLeft: "1px solid black"
//     },
//     rowLabel: {
//         border: 'solid 1px black',
//     },
//     cell: {
//         // set the `cellHeight`
//         height: cellHeight,
//         display: "flex",
//         alignItems: "center",
//         padding: "0 8px",
//         fontFamily: "Arial"
//     }
// })


.Grid {
    // margin-top: 10px;
}

.GridItemEven,
.GridItemOdd {
  display: flex;
  align-items: center;
  justify-content: center;
}

.GridItemEven {
  background-color: #f8f8f0;
}
.rowLabel{
    // absolutely position the label and move it down `cellHeight`
    position: absolute !important;
    top: 0;
    border-top: 1px solid black;
}
.column-label{
    display: flex;
    align-items: center;
    padding: 0 1rem;
    border-right: var(--border);
    text-transform: uppercase;
    font-size: 0.6rem;
    color: var(--gray);
    font-weight: 700;
    background-color: var(--lightGray);

   &::nth-last-child(1){
    border-right: none;
   }
}
.fixed-column {
    display: flex;
    align-items: center;
    padding: 0 1rem; 
    overflow: hidden; 
}

.cell {
    font-size: 0.6rem;
    display: flex;
    align-items: center;
    border-bottom: var(--border);
    border-right: var(--border);
    overflow: hidden; 
    padding: 0 1rem;
}
// export { useStyles, cellHeight, cellWidth, height, width }